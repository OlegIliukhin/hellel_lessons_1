# Д.З 3.2
# Условие
# Ваша програма має перенести останній елемент списку з кінця на початок, тобто,
# останній елемент списку має стати першим. Послідовність інших елементів не має змінюватися.
# Порожній список або список з одним елементом повинен залишитися незмінним.
# Кількість елементів у списку може бути будь-яким – нуль та більше!

# Приклади:
[12, 3, 4, 10] #=> [10, 12, 3, 4]
[1] #=> [1]
[] #=> []
[12, 3, 4, 10, 8] #=> [8, 12, 3, 4, 10]
# Для перевірки коректності роботи Вашого коду використовуйте приклади вище.
# Робити запит на введення даних від користувача не потрібно

# ***решение
# lst[-1] — это последний элемент списка.
#
# lst[:-1] — это все элементы, кроме последнего.
#
# [lst[-1]] + lst[:-1] — создаёт новый список, где последний элемент становится первым.
#
# Если список пустой ([]) или в нём только один элемент ([1]), программа просто возвращает его без изменений.

def move_last_to_first(lst):
    # Если список пустой или содержит один элемент — ничего не меняем
    if len(lst) <= 1:
        return lst
    # Переносим последний элемент в начало
    return [lst[-1]] + lst[:-1]


# Проверка на примерах
print(move_last_to_first([12, 3, 4, 10]))      # [10, 12, 3, 4]
print(move_last_to_first([1]))                 # [1]
print(move_last_to_first([]))                  # []
print(move_last_to_first([12, 3, 4, 10, 8]))   # [8, 12, 3, 4, 10]
