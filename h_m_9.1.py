# Функції в Python є об('єктами першого класу, що дозволяє передавати їх як аргументи іншим функціям. '
# Це відкриває можливості для створення більш абстрактного та гнучкого коду.
# У прикладі вище, функція apply_operation приймає функцію та список даних,
# застосовує цю функцію до кожного елемента списку та повертає результат.)
# У програмуванні функції вважаються об('єктами першого класу, що робить їх такими ж сутностями,'
#  як і числа, рядки або списки. Основне визначення "об')єкту першого класу" означає, що функції можна:
# Передавати як аргументи іншим функціям.
# Призначати їх змінним.
# Повертати їх як значення з інших функцій.
# Це дозволяє створювати більш загальні, абстрактні та гнучкі програми.
# Один із широко вживаних підходів - це передача функції як параметра для іншої функції.
# Приклад: Застосування Функції до Кожного Елемента Списку
# Розглянемо функцію apply_operation, яка приймає функцію operation та список даних,
# застосовує цю функцію до кожного елемента списку і повертає список результатів.
def apply_operation(operation, data):
    """
    Застосовує вказану операцію до кожного елемента списку.

    :param operation: Функція-операція для застосування.
    :param data: Список даних.
    :return: Результат операції для кожного елемента списку.
    """
    result = []
    for item in data:
        result.append(operation(item))
    return result

# Приклад використання
def square(x):
    return x ** 2

def double(x):
    return x * 2

numbers = [1, 2, 3, 4, 5]

squared_numbers = apply_operation(square, numbers)
doubled_numbers = apply_operation(double, numbers)

print(squared_numbers)  # [1, 4, 9, 16, 25]
print(doubled_numbers)   # [2, 4, 6, 8, 10]