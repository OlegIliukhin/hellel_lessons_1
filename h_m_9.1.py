# """На вхід функції popular_words передаються два аргументи. Текст та список слів,
# популярність яких необхідно визначити.
# При вирішенні цього завдання зверніть увагу на такі моменти
# Слова необхідно шукати у всіх регістрах. Тобто. якщо необхідно знайти слово "one",
#  значить для нього будуть підходити слова "one", "One", "oNe", "ONE" і т.д.
# Шукані слова завжди вказані в нижньому регістрі
# Якщо слово не знайдено жодного разу, його необхідно повернути у словнику зі значенням 0 (нуль)
# Вхідні параметри: Текст і масив слів, що шукаються.
# Вихідні параметри: Словник, у якому ключами є шукані слова та значеннями,
#
# text.lower() — делаю все буквы маленькими
# .split() — превращаю строку в список слов.
# пустой словарь result = {} —
# В цикле for word in words: перебираем каждое слово, которое ищем.
# text.count(word) — считаем, сколько раз это слово есть в тексте.
# Записываем в словарь result[word] = text.count(word).
# Возвращаем словарь с результатом.

# Приклад:
from typing import List, Dict

def popular_words(text: str, words: List[str]) -> Dict[str, int]:
    # делаем текст маленькими буквами и разбиваем на слова
    text = text.lower().split()
    # создаём пустой словарь для результата
    result = {}

    for word in words:
        # считаем количество вхождений каждого слова
        result[word] = text.count(word)

    return result

assert popular_words('''When I was One I had just begun When I was Two I was nearly new ''',
                     ['i', 'was', 'three', 'near']) == { 'i': 4, 'was': 3, 'three': 0, 'near': 0 }, 'Test1'
print('OK')
